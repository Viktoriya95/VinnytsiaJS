http://www.sergechel.info/ru/content/using-mongodb-with-c-sharp-part-1-introduction-server-setup

//- var check = !{JSON.stringify(checkins)};








function initMap() {
  map = new google.maps.Map(document.getElementById('map'), {
    center: { lat: 49.2212619, lng: 28.4229144 },
    zoom: 14
  });
  map.addListener('click', function(e) {
    placeMarkerAndPanTo(e.latLng, map);
  });
}

fetch('http://localhost:3000/checkins')
  .then((resp) => resp.json()) // Transform the data into json
  .then(function(checkins) {
    console.log(checkins);
    checkins.map((checkin) => addMarker(checkin));
  })
  .catch(function() {
    console.log('Error')
  });

function addMarker(checkin) {
  //- debugger;
  var marker = new google.maps.Marker({
    position: checkin.cord,
    map: map,
    title: checkin.place
  });
  markers.push(marker);
}

function placeMarkerAndPanTo(latLng, map) {
  map.panTo(latLng);
  var latlng1 = new google.maps.LatLng(latLng.lat(), latLng.lng());
  var place = geocodeLatLng(map, latlng1);

  var marker = {
    name: 'Jack3',
    place: JSON.stringify(place),
    cord: {
      lat:Number(latLng.lat()),
      lng:Number(latLng.lng())
    }
  }
  if(marker.place!=undefined){
    fetch('http://localhost:3000/addcheckin',
    {
      method: 'POST',
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify(marker)
    })
    .then(function (data) {
      console.log('Request succeeded with JSON response', data);
    })
    .catch(function (error) {
      console.log('Request failed', error);
    });
  }
}

function geocodeLatLng(map, latlng1) {
  var infoWindow = new google.maps.InfoWindow();
  var geocoder = geocoder = new google.maps.Geocoder();
  geocoder.geocode({'location': latlng1}, function(results, status) {
    if (status === 'OK') {
      if (results[1]) {
        var marker = new google.maps.Marker({
          position: latlng1,
          map: map
        });
        var place = results[1];
        alert(JSON.stringify(place));
        infowindow.open(map, marker);
        return results[1];
      } else {
        window.alert('No results found');
      }
    } else {
      window.alert('Geocoder failed due to: ' + status);
    }
  });
}








<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">New message</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <form>
          <div class="form-group">
            <label for="recipient-name" class="col-form-label">Recipient:</label>
            <input type="text" class="form-control" id="recipient-name">
          </div>
          <div class="form-group">
            <label for="message-text" class="col-form-label">Message:</label>
            <textarea class="form-control" id="message-text"></textarea>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Send message</button>
      </div>
    </div>
  </div>
</div>




method='POST' action='/regist'




<script>
  var form = document.querySelector("form");
  form.addEventListener("submit", function(event) {
    console.log(form.elements.name.value);
    console.log(form.elements.comment.value);
    event.preventDefault();
  })
</script>
